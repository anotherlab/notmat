<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion. The mimetype is used for serialized objects, 
    and tells the ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LabelOS" xml:space="preserve">
    <value>OS:</value>
    <comment>Label for operating system information</comment>
  </data>
  <data name="LabelKernel" xml:space="preserve">
    <value>Kernel:</value>
    <comment>Label for kernel information</comment>
  </data>
  <data name="LabelUptime" xml:space="preserve">
    <value>Uptime:</value>
    <comment>Label for system uptime</comment>
  </data>
  <data name="LabelCPU" xml:space="preserve">
    <value>CPU:</value>
    <comment>Label for CPU information</comment>
  </data>
  <data name="LabelMemory" xml:space="preserve">
    <value>Memory:</value>
    <comment>Label for memory information</comment>
  </data>
  <data name="LabelShell" xml:space="preserve">
    <value>Shell:</value>
    <comment>Label for shell information</comment>
  </data>
  <data name="LabelTerminal" xml:space="preserve">
    <value>Terminal:</value>
    <comment>Label for terminal information</comment>
  </data>
  <data name="LabelDotNet" xml:space="preserve">
    <value>.NET:</value>
    <comment>Label for .NET runtime information</comment>
  </data>
  <data name="LabelColors" xml:space="preserve">
    <value>Colors:</value>
    <comment>Label for color palette display</comment>
  </data>
  <data name="UptimeDaysHoursMinutes" xml:space="preserve">
    <value>{0} days, {1} hours, {2} mins</value>
    <comment>Format string for uptime with days, hours, and minutes</comment>
  </data>
  <data name="UptimeHoursMinutes" xml:space="preserve">
    <value>{0} hours, {1} mins</value>
    <comment>Format string for uptime with hours and minutes</comment>
  </data>
  <data name="UptimeMinutes" xml:space="preserve">
    <value>{0} mins</value>
    <comment>Format string for uptime with only minutes</comment>
  </data>
  <data name="CPUCoresFormat" xml:space="preserve">
    <value>{0} cores</value>
    <comment>Format string for CPU core count</comment>
  </data>
  <data name="WindowsOSFormat" xml:space="preserve">
    <value>Windows {0}.{1} (Build {2})</value>
    <comment>Format string for Windows OS version</comment>
  </data>
  <data name="MacOSFormat" xml:space="preserve">
    <value>macOS {0}</value>
    <comment>Format string for macOS version</comment>
  </data>
  <data name="MemoryUsageFormat" xml:space="preserve">
    <value>{0} / {1}</value>
    <comment>Format string for memory usage (used / total)</comment>
  </data>
  <data name="WindowsDefault" xml:space="preserve">
    <value>Windows</value>
    <comment>Default Windows OS name</comment>
  </data>
  <data name="MacOSDefault" xml:space="preserve">
    <value>macOS</value>
    <comment>Default macOS name</comment>
  </data>
  <data name="PowerShell" xml:space="preserve">
    <value>PowerShell</value>
    <comment>PowerShell shell name</comment>
  </data>
  <data name="CommandPrompt" xml:space="preserve">
    <value>Command Prompt</value>
    <comment>Command Prompt shell name</comment>
  </data>
  <data name="WindowsTerminal" xml:space="preserve">
    <value>Windows Terminal</value>
    <comment>Windows Terminal name</comment>
  </data>
</root>